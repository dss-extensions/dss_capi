// This file is generated. Avoid manual edition.
// NOTE: The numbers are specific to DSS C-API and can change across versions.

#ifndef DSS_CAPI_ENUMS_H
#define DSS_CAPI_ENUMS_H

#include "./dss_capi.h"

#ifdef __cplusplus
extern "C" {
#endif

    enum AutoTransProperty {
        AutoTrans_phases = 1,
        AutoTrans_windings = 2,
        AutoTrans_wdg = 3,
        AutoTrans_bus = 4,
        AutoTrans_conn = 5,
        AutoTrans_kV = 6,
        AutoTrans_kVA = 7,
        AutoTrans_tap = 8,
        AutoTrans_pctR = 9,
        AutoTrans_Rdcohms = 10,
        AutoTrans_Core = 11,
        AutoTrans_buses = 12,
        AutoTrans_conns = 13,
        AutoTrans_kVs = 14,
        AutoTrans_kVAs = 15,
        AutoTrans_taps = 16,
        AutoTrans_XHX = 17,
        AutoTrans_XHT = 18,
        AutoTrans_XXT = 19,
        AutoTrans_XSCarray = 20,
        AutoTrans_thermal = 21,
        AutoTrans_n = 22,
        AutoTrans_m = 23,
        AutoTrans_flrise = 24,
        AutoTrans_hsrise = 25,
        AutoTrans_pctloadloss = 26,
        AutoTrans_pctnoloadloss = 27,
        AutoTrans_normhkVA = 28,
        AutoTrans_emerghkVA = 29,
        AutoTrans_sub = 30,
        AutoTrans_MaxTap = 31,
        AutoTrans_MinTap = 32,
        AutoTrans_NumTaps = 33,
        AutoTrans_subname = 34,
        AutoTrans_pctimag = 35,
        AutoTrans_ppm_antifloat = 36,
        AutoTrans_pctRs = 37,
        AutoTrans_XRConst = 38,
        AutoTrans_LeadLag = 39,
        AutoTrans_WdgCurrents = 40,
        AutoTrans_normamps = 41,
        AutoTrans_emergamps = 42,
        AutoTrans_faultrate = 43,
        AutoTrans_pctperm = 44,
        AutoTrans_repair = 45,
        AutoTrans_basefreq = 46,
        AutoTrans_enabled = 47,
        AutoTrans_like = 48,
        AutoTrans_PropertyCount = 48
    };

    enum CapacitorProperty {
        Capacitor_bus1 = 1,
        Capacitor_bus2 = 2,
        Capacitor_phases = 3,
        Capacitor_kvar = 4,
        Capacitor_kv = 5,
        Capacitor_conn = 6,
        Capacitor_cmatrix = 7,
        Capacitor_cuf = 8,
        Capacitor_R = 9,
        Capacitor_XL = 10,
        Capacitor_Harm = 11,
        Capacitor_Numsteps = 12,
        Capacitor_states = 13,
        Capacitor_normamps = 14,
        Capacitor_emergamps = 15,
        Capacitor_faultrate = 16,
        Capacitor_pctperm = 17,
        Capacitor_repair = 18,
        Capacitor_basefreq = 19,
        Capacitor_enabled = 20,
        Capacitor_like = 21,
        Capacitor_PropertyCount = 21
    };

    enum CapControlProperty {
        CapControl_element = 1,
        CapControl_terminal = 2,
        CapControl_capacitor = 3,
        CapControl_typ = 4,
        CapControl_PTratio = 5,
        CapControl_CTratio = 6,
        CapControl_ONsetting = 7,
        CapControl_OFFsetting = 8,
        CapControl_Delay = 9,
        CapControl_VoltOverride = 10,
        CapControl_Vmax = 11,
        CapControl_Vmin = 12,
        CapControl_DelayOFF = 13,
        CapControl_DeadTime = 14,
        CapControl_CTPhase = 15,
        CapControl_PTPhase = 16,
        CapControl_VBus = 17,
        CapControl_EventLog = 18,
        CapControl_UserModel = 19,
        CapControl_UserData = 20,
        CapControl_pctMinkvar = 21,
        CapControl_Reset = 22,
        CapControl_basefreq = 23,
        CapControl_enabled = 24,
        CapControl_like = 25,
        CapControl_PropertyCount = 25
    };

    enum CNDataProperty {
        CNData_k = 1,
        CNData_DiaStrand = 2,
        CNData_GmrStrand = 3,
        CNData_Rstrand = 4,
        CNData_EpsR = 5,
        CNData_InsLayer = 6,
        CNData_DiaIns = 7,
        CNData_DiaCable = 8,
        CNData_Rdc = 9,
        CNData_Rac = 10,
        CNData_Runits = 11,
        CNData_GMRac = 12,
        CNData_GMRunits = 13,
        CNData_radius = 14,
        CNData_radunits = 15,
        CNData_normamps = 16,
        CNData_emergamps = 17,
        CNData_diam = 18,
        CNData_Seasons = 19,
        CNData_Ratings = 20,
        CNData_Capradius = 21,
        CNData_like = 22,
        CNData_PropertyCount = 22
    };

    enum EnergyMeterProperty {
        EnergyMeter_element = 1,
        EnergyMeter_terminal = 2,
        EnergyMeter_action = 3,
        EnergyMeter_option = 4,
        EnergyMeter_kVAnormal = 5,
        EnergyMeter_kVAemerg = 6,
        EnergyMeter_peakcurrent = 7,
        EnergyMeter_Zonelist = 8,
        EnergyMeter_LocalOnly = 9,
        EnergyMeter_Mask = 10,
        EnergyMeter_Losses = 11,
        EnergyMeter_LineLosses = 12,
        EnergyMeter_XfmrLosses = 13,
        EnergyMeter_SeqLosses = 14,
        EnergyMeter_3phaseLosses = 15,
        EnergyMeter_VbaseLosses = 16,
        EnergyMeter_PhaseVoltageReport = 17,
        EnergyMeter_Int_Rate = 18,
        EnergyMeter_Int_Duration = 19,
        EnergyMeter_SAIFI = 20,
        EnergyMeter_SAIFIkW = 21,
        EnergyMeter_SAIDI = 22,
        EnergyMeter_CAIDI = 23,
        EnergyMeter_CustInterrupts = 24,
        EnergyMeter_basefreq = 25,
        EnergyMeter_enabled = 26,
        EnergyMeter_like = 27,
        EnergyMeter_PropertyCount = 27
    };

    enum ESPVLControlProperty {
        ESPVLControl_Element = 1,
        ESPVLControl_Terminal = 2,
        ESPVLControl_Typ = 3,
        ESPVLControl_kWBand = 4,
        ESPVLControl_kvarlimit = 5,
        ESPVLControl_LocalControlList = 6,
        ESPVLControl_LocalControlWeights = 7,
        ESPVLControl_PVSystemList = 8,
        ESPVLControl_PVSystemWeights = 9,
        ESPVLControl_StorageList = 10,
        ESPVLControl_StorageWeights = 11,
        ESPVLControl_basefreq = 12,
        ESPVLControl_enabled = 13,
        ESPVLControl_like = 14,
        ESPVLControl_PropertyCount = 14
    };

    enum ExpControlProperty {
        ExpControl_PVSystemList = 1,
        ExpControl_Vreg = 2,
        ExpControl_Slope = 3,
        ExpControl_VregTau = 4,
        ExpControl_Qbias = 5,
        ExpControl_VregMin = 6,
        ExpControl_VregMax = 7,
        ExpControl_QmaxLead = 8,
        ExpControl_QmaxLag = 9,
        ExpControl_EventLog = 10,
        ExpControl_DeltaQ_factor = 11,
        ExpControl_PreferQ = 12,
        ExpControl_Tresponse = 13,
        ExpControl_basefreq = 14,
        ExpControl_enabled = 15,
        ExpControl_like = 16,
        ExpControl_PropertyCount = 16
    };

    enum FaultProperty {
        Fault_bus1 = 1,
        Fault_bus2 = 2,
        Fault_phases = 3,
        Fault_r = 4,
        Fault_pctstddev = 5,
        Fault_Gmatrix = 6,
        Fault_ONtime = 7,
        Fault_temporary = 8,
        Fault_MinAmps = 9,
        Fault_normamps = 10,
        Fault_emergamps = 11,
        Fault_faultrate = 12,
        Fault_pctperm = 13,
        Fault_repair = 14,
        Fault_basefreq = 15,
        Fault_enabled = 16,
        Fault_like = 17,
        Fault_PropertyCount = 17
    };

    enum FuseProperty {
        Fuse_MonitoredObj = 1,
        Fuse_MonitoredTerm = 2,
        Fuse_SwitchedObj = 3,
        Fuse_SwitchedTerm = 4,
        Fuse_FuseCurve = 5,
        Fuse_RatedCurrent = 6,
        Fuse_Delay = 7,
        Fuse_Action = 8,
        Fuse_Normal = 9,
        Fuse_State = 10,
        Fuse_basefreq = 11,
        Fuse_enabled = 12,
        Fuse_like = 13,
        Fuse_PropertyCount = 13
    };

    enum GenDispatcherProperty {
        GenDispatcher_Element = 1,
        GenDispatcher_Terminal = 2,
        GenDispatcher_kWLimit = 3,
        GenDispatcher_kWBand = 4,
        GenDispatcher_kvarlimit = 5,
        GenDispatcher_GenList = 6,
        GenDispatcher_Weights = 7,
        GenDispatcher_basefreq = 8,
        GenDispatcher_enabled = 9,
        GenDispatcher_like = 10,
        GenDispatcher_PropertyCount = 10
    };

    enum GeneratorProperty {
        Generator_phases = 1,
        Generator_bus1 = 2,
        Generator_kv = 3,
        Generator_kW = 4,
        Generator_pf = 5,
        Generator_kvar = 6,
        Generator_model = 7,
        Generator_Vminpu = 8,
        Generator_Vmaxpu = 9,
        Generator_yearly = 10,
        Generator_daily = 11,
        Generator_duty = 12,
        Generator_dispmode = 13,
        Generator_dispvalue = 14,
        Generator_conn = 15,
        Generator_status = 16,
        Generator_cls = 17,
        Generator_Vpu = 18,
        Generator_maxkvar = 19,
        Generator_minkvar = 20,
        Generator_pvfactor = 21,
        Generator_forceon = 22,
        Generator_kVA = 23,
        Generator_MVA = 24,
        Generator_Xd = 25,
        Generator_Xdp = 26,
        Generator_Xdpp = 27,
        Generator_H = 28,
        Generator_D = 29,
        Generator_UserModel = 30,
        Generator_UserData = 31,
        Generator_ShaftModel = 32,
        Generator_ShaftData = 33,
        Generator_DutyStart = 34,
        Generator_debugtrace = 35,
        Generator_Balanced = 36,
        Generator_XRdp = 37,
        Generator_UseFuel = 38,
        Generator_FuelkWh = 39,
        Generator_pctFuel = 40,
        Generator_pctReserve = 41,
        Generator_Refuel = 42,
        Generator_spectrum = 43,
        Generator_basefreq = 44,
        Generator_enabled = 45,
        Generator_like = 46,
        Generator_PropertyCount = 46
    };

    enum GICLineProperty {
        GICLine_bus1 = 1,
        GICLine_bus2 = 2,
        GICLine_Volts = 3,
        GICLine_Angle = 4,
        GICLine_frequency = 5,
        GICLine_phases = 6,
        GICLine_R = 7,
        GICLine_X = 8,
        GICLine_C = 9,
        GICLine_EN = 10,
        GICLine_EE = 11,
        GICLine_Lat1 = 12,
        GICLine_Lon1 = 13,
        GICLine_Lat2 = 14,
        GICLine_Lon2 = 15,
        GICLine_spectrum = 16,
        GICLine_basefreq = 17,
        GICLine_enabled = 18,
        GICLine_like = 19,
        GICLine_PropertyCount = 19
    };

    enum GICSourceProperty {
        GICSource_Volts = 1,
        GICSource_angle = 2,
        GICSource_frequency = 3,
        GICSource_phases = 4,
        GICSource_EN = 5,
        GICSource_EE = 6,
        GICSource_Lat1 = 7,
        GICSource_Lon1 = 8,
        GICSource_Lat2 = 9,
        GICSource_Lon2 = 10,
        GICSource_spectrum = 11,
        GICSource_basefreq = 12,
        GICSource_enabled = 13,
        GICSource_like = 14,
        GICSource_PropertyCount = 14
    };

    enum GICTransformerProperty {
        GICTransformer_BusH = 1,
        GICTransformer_BusNH = 2,
        GICTransformer_BusX = 3,
        GICTransformer_BusNX = 4,
        GICTransformer_phases = 5,
        GICTransformer_Typ = 6,
        GICTransformer_R1 = 7,
        GICTransformer_R2 = 8,
        GICTransformer_KVLL1 = 9,
        GICTransformer_KVLL2 = 10,
        GICTransformer_MVA = 11,
        GICTransformer_VarCurve = 12,
        GICTransformer_pctR1 = 13,
        GICTransformer_pctR2 = 14,
        GICTransformer_K = 15,
        GICTransformer_normamps = 16,
        GICTransformer_emergamps = 17,
        GICTransformer_faultrate = 18,
        GICTransformer_pctperm = 19,
        GICTransformer_repair = 20,
        GICTransformer_basefreq = 21,
        GICTransformer_enabled = 22,
        GICTransformer_like = 23,
        GICTransformer_PropertyCount = 23
    };

    enum GrowthShapeProperty {
        GrowthShape_npts = 1,
        GrowthShape_year = 2,
        GrowthShape_mult = 3,
        GrowthShape_csvfile = 4,
        GrowthShape_sngfile = 5,
        GrowthShape_dblfile = 6,
        GrowthShape_like = 7,
        GrowthShape_PropertyCount = 7
    };

    enum IndMach012Property {
        IndMach012_phases = 1,
        IndMach012_bus1 = 2,
        IndMach012_kv = 3,
        IndMach012_kW = 4,
        IndMach012_pf = 5,
        IndMach012_conn = 6,
        IndMach012_kVA = 7,
        IndMach012_H = 8,
        IndMach012_D = 9,
        IndMach012_puRs = 10,
        IndMach012_puXs = 11,
        IndMach012_puRr = 12,
        IndMach012_puXr = 13,
        IndMach012_puXm = 14,
        IndMach012_Slip = 15,
        IndMach012_MaxSlip = 16,
        IndMach012_SlipOption = 17,
        IndMach012_Yearly = 18,
        IndMach012_Daily = 19,
        IndMach012_Duty = 20,
        IndMach012_Debugtrace = 21,
        IndMach012_spectrum = 22,
        IndMach012_basefreq = 23,
        IndMach012_enabled = 24,
        IndMach012_like = 25,
        IndMach012_PropertyCount = 25
    };

    enum LegacyInvControlProperty {
        LegacyInvControl_PVSystemList = 1,
        LegacyInvControl_Mode = 2,
        LegacyInvControl_CombiMode = 3,
        LegacyInvControl_vvc_curve1 = 4,
        LegacyInvControl_hysteresis_offset = 5,
        LegacyInvControl_voltage_curvex_ref = 6,
        LegacyInvControl_avgwindowlen = 7,
        LegacyInvControl_voltwatt_curve = 8,
        LegacyInvControl_DbVMin = 9,
        LegacyInvControl_DbVMax = 10,
        LegacyInvControl_ArGraLowV = 11,
        LegacyInvControl_ArGraHiV = 12,
        LegacyInvControl_DynReacavgwindowlen = 13,
        LegacyInvControl_DeltaQ_factor = 14,
        LegacyInvControl_VoltageChangeTolerance = 15,
        LegacyInvControl_VarChangeTolerance = 16,
        LegacyInvControl_VoltwattYAxis = 17,
        LegacyInvControl_RateofChangeMode = 18,
        LegacyInvControl_LPFTau = 19,
        LegacyInvControl_RiseFallLimit = 20,
        LegacyInvControl_DeltaP_factor = 21,
        LegacyInvControl_EventLog = 22,
        LegacyInvControl_VV_RefReactivePower = 23,
        LegacyInvControl_ActivePChangeTolerance = 24,
        LegacyInvControl_basefreq = 25,
        LegacyInvControl_enabled = 26,
        LegacyInvControl_like = 27,
        LegacyInvControl_PropertyCount = 27
    };

    enum InvControlProperty {
        InvControl_DERList = 1,
        InvControl_Mode = 2,
        InvControl_CombiMode = 3,
        InvControl_vvc_curve1 = 4,
        InvControl_hysteresis_offset = 5,
        InvControl_voltage_curvex_ref = 6,
        InvControl_avgwindowlen = 7,
        InvControl_voltwatt_curve = 8,
        InvControl_DbVMin = 9,
        InvControl_DbVMax = 10,
        InvControl_ArGraLowV = 11,
        InvControl_ArGraHiV = 12,
        InvControl_DynReacavgwindowlen = 13,
        InvControl_deltaQ_Factor = 14,
        InvControl_VoltageChangeTolerance = 15,
        InvControl_VarChangeTolerance = 16,
        InvControl_VoltwattYAxis = 17,
        InvControl_RateofChangeMode = 18,
        InvControl_LPFTau = 19,
        InvControl_RiseFallLimit = 20,
        InvControl_deltaP_Factor = 21,
        InvControl_EventLog = 22,
        InvControl_RefReactivePower = 23,
        InvControl_ActivePChangeTolerance = 24,
        InvControl_monVoltageCalc = 25,
        InvControl_monBus = 26,
        InvControl_MonBusesVbase = 27,
        InvControl_voltwattCH_curve = 28,
        InvControl_wattpf_curve = 29,
        InvControl_wattvar_curve = 30,
        InvControl_PVSystemList = 31,
        InvControl_Vsetpoint = 32,
        InvControl_basefreq = 33,
        InvControl_enabled = 34,
        InvControl_like = 35,
        InvControl_PropertyCount = 35
    };

    enum ISourceProperty {
        ISource_bus1 = 1,
        ISource_amps = 2,
        ISource_angle = 3,
        ISource_frequency = 4,
        ISource_phases = 5,
        ISource_scantype = 6,
        ISource_sequence = 7,
        ISource_Yearly = 8,
        ISource_Daily = 9,
        ISource_Duty = 10,
        ISource_Bus2 = 11,
        ISource_spectrum = 12,
        ISource_basefreq = 13,
        ISource_enabled = 14,
        ISource_like = 15,
        ISource_PropertyCount = 15
    };

    enum LineProperty {
        Line_bus1 = 1,
        Line_bus2 = 2,
        Line_linecode = 3,
        Line_length = 4,
        Line_phases = 5,
        Line_r1 = 6,
        Line_x1 = 7,
        Line_r0 = 8,
        Line_x0 = 9,
        Line_C1 = 10,
        Line_C0 = 11,
        Line_rmatrix = 12,
        Line_xmatrix = 13,
        Line_cmatrix = 14,
        Line_Switch = 15,
        Line_Rg = 16,
        Line_Xg = 17,
        Line_rho = 18,
        Line_geometry = 19,
        Line_units = 20,
        Line_spacing = 21,
        Line_wires = 22,
        Line_EarthModel = 23,
        Line_cncables = 24,
        Line_tscables = 25,
        Line_B1 = 26,
        Line_B0 = 27,
        Line_Seasons = 28,
        Line_Ratings = 29,
        Line_LineType = 30,
        Line_normamps = 31,
        Line_emergamps = 32,
        Line_faultrate = 33,
        Line_pctperm = 34,
        Line_repair = 35,
        Line_basefreq = 36,
        Line_enabled = 37,
        Line_like = 38,
        Line_PropertyCount = 38
    };

    enum LineCodeProperty {
        LineCode_nphases = 1,
        LineCode_r1 = 2,
        LineCode_x1 = 3,
        LineCode_r0 = 4,
        LineCode_x0 = 5,
        LineCode_C1 = 6,
        LineCode_C0 = 7,
        LineCode_units = 8,
        LineCode_rmatrix = 9,
        LineCode_xmatrix = 10,
        LineCode_cmatrix = 11,
        LineCode_baseFreq = 12,
        LineCode_normamps = 13,
        LineCode_emergamps = 14,
        LineCode_faultrate = 15,
        LineCode_pctperm = 16,
        LineCode_repair = 17,
        LineCode_Kron = 18,
        LineCode_Rg = 19,
        LineCode_Xg = 20,
        LineCode_rho = 21,
        LineCode_neutral = 22,
        LineCode_B1 = 23,
        LineCode_B0 = 24,
        LineCode_Seasons = 25,
        LineCode_Ratings = 26,
        LineCode_LineType = 27,
        LineCode_like = 28,
        LineCode_PropertyCount = 28
    };

    enum LineGeometryProperty {
        LineGeometry_nconds = 1,
        LineGeometry_nphases = 2,
        LineGeometry_cond = 3,
        LineGeometry_wire = 4,
        LineGeometry_x = 5,
        LineGeometry_h = 6,
        LineGeometry_units = 7,
        LineGeometry_normamps = 8,
        LineGeometry_emergamps = 9,
        LineGeometry_reduce = 10,
        LineGeometry_spacing = 11,
        LineGeometry_wires = 12,
        LineGeometry_cncable = 13,
        LineGeometry_tscable = 14,
        LineGeometry_cncables = 15,
        LineGeometry_tscables = 16,
        LineGeometry_Seasons = 17,
        LineGeometry_Ratings = 18,
        LineGeometry_LineType = 19,
        LineGeometry_like = 20,
        LineGeometry_PropertyCount = 20
    };

    enum LineSpacingProperty {
        LineSpacing_nconds = 1,
        LineSpacing_nphases = 2,
        LineSpacing_x = 3,
        LineSpacing_h = 4,
        LineSpacing_units = 5,
        LineSpacing_like = 6,
        LineSpacing_PropertyCount = 6
    };

    enum LoadProperty {
        Load_phases = 1,
        Load_bus1 = 2,
        Load_kV = 3,
        Load_kW = 4,
        Load_pf = 5,
        Load_model = 6,
        Load_yearly = 7,
        Load_daily = 8,
        Load_duty = 9,
        Load_growth = 10,
        Load_conn = 11,
        Load_kvar = 12,
        Load_Rneut = 13,
        Load_Xneut = 14,
        Load_status = 15,
        Load_cls = 16,
        Load_Vminpu = 17,
        Load_Vmaxpu = 18,
        Load_Vminnorm = 19,
        Load_Vminemerg = 20,
        Load_xfkVA = 21,
        Load_allocationfactor = 22,
        Load_kVA = 23,
        Load_pctmean = 24,
        Load_pctstddev = 25,
        Load_CVRwatts = 26,
        Load_CVRvars = 27,
        Load_kwh = 28,
        Load_kwhdays = 29,
        Load_Cfactor = 30,
        Load_CVRcurve = 31,
        Load_NumCust = 32,
        Load_ZIPV = 33,
        Load_pctSeriesRL = 34,
        Load_RelWeight = 35,
        Load_Vlowpu = 36,
        Load_puXharm = 37,
        Load_XRharm = 38,
        Load_spectrum = 39,
        Load_basefreq = 40,
        Load_enabled = 41,
        Load_like = 42,
        Load_PropertyCount = 42
    };

    enum LoadShapeProperty {
        LoadShape_npts = 1,
        LoadShape_interval = 2,
        LoadShape_mult = 3,
        LoadShape_hour = 4,
        LoadShape_mean = 5,
        LoadShape_stddev = 6,
        LoadShape_csvfile = 7,
        LoadShape_sngfile = 8,
        LoadShape_dblfile = 9,
        LoadShape_action = 10,
        LoadShape_qmult = 11,
        LoadShape_UseActual = 12,
        LoadShape_Pmax = 13,
        LoadShape_Qmax = 14,
        LoadShape_sinterval = 15,
        LoadShape_minterval = 16,
        LoadShape_Pbase = 17,
        LoadShape_Qbase = 18,
        LoadShape_Pmult = 19,
        LoadShape_PQCSVFile = 20,
        LoadShape_MemoryMapping = 21,
        LoadShape_like = 22,
        LoadShape_PropertyCount = 22
    };

    enum MonitorProperty {
        Monitor_element = 1,
        Monitor_terminal = 2,
        Monitor_mode = 3,
        Monitor_action = 4,
        Monitor_residual = 5,
        Monitor_VIPolar = 6,
        Monitor_PPolar = 7,
        Monitor_basefreq = 8,
        Monitor_enabled = 9,
        Monitor_like = 10,
        Monitor_PropertyCount = 10
    };

    enum PriceShapeProperty {
        PriceShape_npts = 1,
        PriceShape_interval = 2,
        PriceShape_price = 3,
        PriceShape_hour = 4,
        PriceShape_mean = 5,
        PriceShape_stddev = 6,
        PriceShape_csvfile = 7,
        PriceShape_sngfile = 8,
        PriceShape_dblfile = 9,
        PriceShape_sinterval = 10,
        PriceShape_minterval = 11,
        PriceShape_action = 12,
        PriceShape_like = 13,
        PriceShape_PropertyCount = 13
    };

    enum LegacyPVSystemProperty {
        LegacyPVSystem_phases = 1,
        LegacyPVSystem_bus1 = 2,
        LegacyPVSystem_kv = 3,
        LegacyPVSystem_irradiance = 4,
        LegacyPVSystem_Pmpp = 5,
        LegacyPVSystem_pctPmpp = 6,
        LegacyPVSystem_Temperature = 7,
        LegacyPVSystem_pf = 8,
        LegacyPVSystem_conn = 9,
        LegacyPVSystem_kvar = 10,
        LegacyPVSystem_kVA = 11,
        LegacyPVSystem_pctCutin = 12,
        LegacyPVSystem_pctCutout = 13,
        LegacyPVSystem_EffCurve = 14,
        LegacyPVSystem_P__TCurve = 15,
        LegacyPVSystem_pctR = 16,
        LegacyPVSystem_pctX = 17,
        LegacyPVSystem_model = 18,
        LegacyPVSystem_Vminpu = 19,
        LegacyPVSystem_Vmaxpu = 20,
        LegacyPVSystem_Balanced = 21,
        LegacyPVSystem_LimitCurrent = 22,
        LegacyPVSystem_yearly = 23,
        LegacyPVSystem_daily = 24,
        LegacyPVSystem_duty = 25,
        LegacyPVSystem_Tyearly = 26,
        LegacyPVSystem_Tdaily = 27,
        LegacyPVSystem_Tduty = 28,
        LegacyPVSystem_cls = 29,
        LegacyPVSystem_UserModel = 30,
        LegacyPVSystem_UserData = 31,
        LegacyPVSystem_debugtrace = 32,
        LegacyPVSystem_VarFollowInverter = 33,
        LegacyPVSystem_kvarLimit = 34,
        LegacyPVSystem_DutyStart = 35,
        LegacyPVSystem_WattPriority = 36,
        LegacyPVSystem_spectrum = 37,
        LegacyPVSystem_basefreq = 38,
        LegacyPVSystem_enabled = 39,
        LegacyPVSystem_like = 40,
        LegacyPVSystem_PropertyCount = 40
    };

    enum PVSystemProperty {
        PVSystem_phases = 1,
        PVSystem_bus1 = 2,
        PVSystem_kv = 3,
        PVSystem_irradiance = 4,
        PVSystem_Pmpp = 5,
        PVSystem_pctPmpp = 6,
        PVSystem_Temperature = 7,
        PVSystem_pf = 8,
        PVSystem_conn = 9,
        PVSystem_kvar = 10,
        PVSystem_kVA = 11,
        PVSystem_pctCutin = 12,
        PVSystem_pctCutout = 13,
        PVSystem_EffCurve = 14,
        PVSystem_P__TCurve = 15,
        PVSystem_pctR = 16,
        PVSystem_pctX = 17,
        PVSystem_model = 18,
        PVSystem_Vminpu = 19,
        PVSystem_Vmaxpu = 20,
        PVSystem_Balanced = 21,
        PVSystem_LimitCurrent = 22,
        PVSystem_yearly = 23,
        PVSystem_daily = 24,
        PVSystem_duty = 25,
        PVSystem_Tyearly = 26,
        PVSystem_Tdaily = 27,
        PVSystem_Tduty = 28,
        PVSystem_cls = 29,
        PVSystem_UserModel = 30,
        PVSystem_UserData = 31,
        PVSystem_debugtrace = 32,
        PVSystem_VarFollowInverter = 33,
        PVSystem_DutyStart = 34,
        PVSystem_WattPriority = 35,
        PVSystem_PFPriority = 36,
        PVSystem_pctPminNoVars = 37,
        PVSystem_pctPminkvarMax = 38,
        PVSystem_kvarMax = 39,
        PVSystem_kvarMaxAbs = 40,
        PVSystem_spectrum = 41,
        PVSystem_basefreq = 42,
        PVSystem_enabled = 43,
        PVSystem_like = 44,
        PVSystem_PropertyCount = 44
    };

    enum ReactorProperty {
        Reactor_bus1 = 1,
        Reactor_bus2 = 2,
        Reactor_phases = 3,
        Reactor_kvar = 4,
        Reactor_kv = 5,
        Reactor_conn = 6,
        Reactor_Rmatrix = 7,
        Reactor_Xmatrix = 8,
        Reactor_Parallel = 9,
        Reactor_R = 10,
        Reactor_X = 11,
        Reactor_Rp = 12,
        Reactor_Z1 = 13,
        Reactor_Z2 = 14,
        Reactor_Z0 = 15,
        Reactor_Z = 16,
        Reactor_RCurve = 17,
        Reactor_LCurve = 18,
        Reactor_LmH = 19,
        Reactor_normamps = 20,
        Reactor_emergamps = 21,
        Reactor_faultrate = 22,
        Reactor_pctperm = 23,
        Reactor_repair = 24,
        Reactor_basefreq = 25,
        Reactor_enabled = 26,
        Reactor_like = 27,
        Reactor_PropertyCount = 27
    };

    enum RecloserProperty {
        Recloser_MonitoredObj = 1,
        Recloser_MonitoredTerm = 2,
        Recloser_SwitchedObj = 3,
        Recloser_SwitchedTerm = 4,
        Recloser_NumFast = 5,
        Recloser_PhaseFast = 6,
        Recloser_PhaseDelayed = 7,
        Recloser_GroundFast = 8,
        Recloser_GroundDelayed = 9,
        Recloser_PhaseTrip = 10,
        Recloser_GroundTrip = 11,
        Recloser_PhaseInst = 12,
        Recloser_GroundInst = 13,
        Recloser_Reset = 14,
        Recloser_Shots = 15,
        Recloser_RecloseIntervals = 16,
        Recloser_Delay = 17,
        Recloser_Action = 18,
        Recloser_TDPhFast = 19,
        Recloser_TDGrFast = 20,
        Recloser_TDPhDelayed = 21,
        Recloser_TDGrDelayed = 22,
        Recloser_Normal = 23,
        Recloser_State = 24,
        Recloser_basefreq = 25,
        Recloser_enabled = 26,
        Recloser_like = 27,
        Recloser_PropertyCount = 27
    };

    enum RegControlProperty {
        RegControl_transformer = 1,
        RegControl_winding = 2,
        RegControl_vreg = 3,
        RegControl_band = 4,
        RegControl_ptratio = 5,
        RegControl_CTprim = 6,
        RegControl_R = 7,
        RegControl_X = 8,
        RegControl_bus = 9,
        RegControl_delay = 10,
        RegControl_reversible = 11,
        RegControl_revvreg = 12,
        RegControl_revband = 13,
        RegControl_revR = 14,
        RegControl_revX = 15,
        RegControl_tapdelay = 16,
        RegControl_debugtrace = 17,
        RegControl_maxtapchange = 18,
        RegControl_inversetime = 19,
        RegControl_tapwinding = 20,
        RegControl_vlimit = 21,
        RegControl_PTphase = 22,
        RegControl_revThreshold = 23,
        RegControl_revDelay = 24,
        RegControl_revNeutral = 25,
        RegControl_EventLog = 26,
        RegControl_RemotePTRatio = 27,
        RegControl_TapNum = 28,
        RegControl_Reset = 29,
        RegControl_LDC_Z = 30,
        RegControl_rev_Z = 31,
        RegControl_Cogen = 32,
        RegControl_basefreq = 33,
        RegControl_enabled = 34,
        RegControl_like = 35,
        RegControl_PropertyCount = 35
    };

    enum RelayProperty {
        Relay_MonitoredObj = 1,
        Relay_MonitoredTerm = 2,
        Relay_SwitchedObj = 3,
        Relay_SwitchedTerm = 4,
        Relay_typ = 5,
        Relay_Phasecurve = 6,
        Relay_Groundcurve = 7,
        Relay_PhaseTrip = 8,
        Relay_GroundTrip = 9,
        Relay_TDPhase = 10,
        Relay_TDGround = 11,
        Relay_PhaseInst = 12,
        Relay_GroundInst = 13,
        Relay_Reset = 14,
        Relay_Shots = 15,
        Relay_RecloseIntervals = 16,
        Relay_Delay = 17,
        Relay_Overvoltcurve = 18,
        Relay_Undervoltcurve = 19,
        Relay_kvbase = 20,
        Relay_47pctPickup = 21,
        Relay_46BaseAmps = 22,
        Relay_46pctPickup = 23,
        Relay_46isqt = 24,
        Relay_Variable = 25,
        Relay_overtrip = 26,
        Relay_undertrip = 27,
        Relay_Breakertime = 28,
        Relay_action = 29,
        Relay_Z1mag = 30,
        Relay_Z1ang = 31,
        Relay_Z0mag = 32,
        Relay_Z0ang = 33,
        Relay_Mphase = 34,
        Relay_Mground = 35,
        Relay_EventLog = 36,
        Relay_DebugTrace = 37,
        Relay_DistReverse = 38,
        Relay_Normal = 39,
        Relay_State = 40,
        Relay_basefreq = 41,
        Relay_enabled = 42,
        Relay_like = 43,
        Relay_PropertyCount = 43
    };

    enum SensorProperty {
        Sensor_element = 1,
        Sensor_terminal = 2,
        Sensor_kvbase = 3,
        Sensor_clear = 4,
        Sensor_kVs = 5,
        Sensor_currents = 6,
        Sensor_kWs = 7,
        Sensor_kvars = 8,
        Sensor_conn = 9,
        Sensor_Deltadirection = 10,
        Sensor_pctError = 11,
        Sensor_Weight = 12,
        Sensor_basefreq = 13,
        Sensor_enabled = 14,
        Sensor_like = 15,
        Sensor_PropertyCount = 15
    };

    enum SpectrumProperty {
        Spectrum_NumHarm = 1,
        Spectrum_harmonic = 2,
        Spectrum_pctmag = 3,
        Spectrum_angle = 4,
        Spectrum_CSVFile = 5,
        Spectrum_like = 6,
        Spectrum_PropertyCount = 6
    };

    enum LegacyStorageProperty {
        LegacyStorage_phases = 1,
        LegacyStorage_bus1 = 2,
        LegacyStorage_kv = 3,
        LegacyStorage_kW = 4,
        LegacyStorage_pf = 5,
        LegacyStorage_conn = 6,
        LegacyStorage_kvar = 7,
        LegacyStorage_kVA = 8,
        LegacyStorage_kWrated = 9,
        LegacyStorage_kWhrated = 10,
        LegacyStorage_kWhstored = 11,
        LegacyStorage_pctstored = 12,
        LegacyStorage_pctreserve = 13,
        LegacyStorage_State = 14,
        LegacyStorage_pctDischarge = 15,
        LegacyStorage_pctCharge = 16,
        LegacyStorage_pctEffCharge = 17,
        LegacyStorage_pctEffDischarge = 18,
        LegacyStorage_pctIdlingkW = 19,
        LegacyStorage_pctIdlingkvar = 20,
        LegacyStorage_pctR = 21,
        LegacyStorage_pctX = 22,
        LegacyStorage_model = 23,
        LegacyStorage_Vminpu = 24,
        LegacyStorage_Vmaxpu = 25,
        LegacyStorage_Balanced = 26,
        LegacyStorage_LimitCurrent = 27,
        LegacyStorage_yearly = 28,
        LegacyStorage_daily = 29,
        LegacyStorage_duty = 30,
        LegacyStorage_DispMode = 31,
        LegacyStorage_DischargeTrigger = 32,
        LegacyStorage_ChargeTrigger = 33,
        LegacyStorage_TimeChargeTrig = 34,
        LegacyStorage_cls = 35,
        LegacyStorage_DynaDLL = 36,
        LegacyStorage_DynaData = 37,
        LegacyStorage_UserModel = 38,
        LegacyStorage_UserData = 39,
        LegacyStorage_debugtrace = 40,
        LegacyStorage_spectrum = 41,
        LegacyStorage_basefreq = 42,
        LegacyStorage_enabled = 43,
        LegacyStorage_like = 44,
        LegacyStorage_PropertyCount = 44
    };

    enum StorageProperty {
        Storage_phases = 1,
        Storage_bus1 = 2,
        Storage_kv = 3,
        Storage_conn = 4,
        Storage_kW = 5,
        Storage_kvar = 6,
        Storage_pf = 7,
        Storage_kVA = 8,
        Storage_pctCutin = 9,
        Storage_pctCutout = 10,
        Storage_EffCurve = 11,
        Storage_VarFollowInverter = 12,
        Storage_kvarMax = 13,
        Storage_kvarMaxAbs = 14,
        Storage_WattPriority = 15,
        Storage_PFPriority = 16,
        Storage_pctPminNoVars = 17,
        Storage_pctPminkvarMax = 18,
        Storage_kWrated = 19,
        Storage_pctkWrated = 20,
        Storage_kWhrated = 21,
        Storage_kWhstored = 22,
        Storage_pctstored = 23,
        Storage_pctreserve = 24,
        Storage_State = 25,
        Storage_pctDischarge = 26,
        Storage_pctCharge = 27,
        Storage_pctEffCharge = 28,
        Storage_pctEffDischarge = 29,
        Storage_pctIdlingkW = 30,
        Storage_pctR = 31,
        Storage_pctX = 32,
        Storage_model = 33,
        Storage_Vminpu = 34,
        Storage_Vmaxpu = 35,
        Storage_Balanced = 36,
        Storage_LimitCurrent = 37,
        Storage_yearly = 38,
        Storage_daily = 39,
        Storage_duty = 40,
        Storage_DispMode = 41,
        Storage_DischargeTrigger = 42,
        Storage_ChargeTrigger = 43,
        Storage_TimeChargeTrig = 44,
        Storage_cls = 45,
        Storage_DynaDLL = 46,
        Storage_DynaData = 47,
        Storage_UserModel = 48,
        Storage_UserData = 49,
        Storage_debugtrace = 50,
        Storage_spectrum = 51,
        Storage_basefreq = 52,
        Storage_enabled = 53,
        Storage_like = 54,
        Storage_PropertyCount = 54
    };

    enum LegacyStorageControllerProperty {
        LegacyStorageController_Element = 1,
        LegacyStorageController_Terminal = 2,
        LegacyStorageController_kWTarget = 3,
        LegacyStorageController_kWTargetLow = 4,
        LegacyStorageController_pctkWBand = 5,
        LegacyStorageController_pctkWBandLow = 6,
        LegacyStorageController_PFTarget = 7,
        LegacyStorageController_PFBand = 8,
        LegacyStorageController_ElementList = 9,
        LegacyStorageController_Weights = 10,
        LegacyStorageController_ModeDischarge = 11,
        LegacyStorageController_ModeCharge = 12,
        LegacyStorageController_TimeDischargeTrigger = 13,
        LegacyStorageController_TimeChargeTrigger = 14,
        LegacyStorageController_pctRatekW = 15,
        LegacyStorageController_pctRatekvar = 16,
        LegacyStorageController_pctRateCharge = 17,
        LegacyStorageController_pctReserve = 18,
        LegacyStorageController_kWhTotal = 19,
        LegacyStorageController_kWTotal = 20,
        LegacyStorageController_kWhActual = 21,
        LegacyStorageController_kWActual = 22,
        LegacyStorageController_kWneed = 23,
        LegacyStorageController_pctParticipation = 24,
        LegacyStorageController_Yearly = 25,
        LegacyStorageController_Daily = 26,
        LegacyStorageController_Duty = 27,
        LegacyStorageController_EventLog = 28,
        LegacyStorageController_VarDispatch = 29,
        LegacyStorageController_InhibitTime = 30,
        LegacyStorageController_Tup = 31,
        LegacyStorageController_TFlat = 32,
        LegacyStorageController_Tdn = 33,
        LegacyStorageController_kWThreshold = 34,
        LegacyStorageController_ResetLevel = 35,
        LegacyStorageController_Seasons = 36,
        LegacyStorageController_SeasonTargets = 37,
        LegacyStorageController_SeasonTargetsLow = 38,
        LegacyStorageController_basefreq = 39,
        LegacyStorageController_enabled = 40,
        LegacyStorageController_like = 41,
        LegacyStorageController_PropertyCount = 41
    };

    enum StorageControllerProperty {
        StorageController_Element = 1,
        StorageController_Terminal = 2,
        StorageController_MonPhase = 3,
        StorageController_kWTarget = 4,
        StorageController_kWTargetLow = 5,
        StorageController_pctkWBand = 6,
        StorageController_kWBand = 7,
        StorageController_pctkWBandLow = 8,
        StorageController_kWBandLow = 9,
        StorageController_ElementList = 10,
        StorageController_Weights = 11,
        StorageController_ModeDischarge = 12,
        StorageController_ModeCharge = 13,
        StorageController_TimeDischargeTrigger = 14,
        StorageController_TimeChargeTrigger = 15,
        StorageController_pctRatekW = 16,
        StorageController_pctRateCharge = 17,
        StorageController_pctReserve = 18,
        StorageController_kWhTotal = 19,
        StorageController_kWTotal = 20,
        StorageController_kWhActual = 21,
        StorageController_kWActual = 22,
        StorageController_kWneed = 23,
        StorageController_Yearly = 24,
        StorageController_Daily = 25,
        StorageController_Duty = 26,
        StorageController_EventLog = 27,
        StorageController_InhibitTime = 28,
        StorageController_Tup = 29,
        StorageController_TFlat = 30,
        StorageController_Tdn = 31,
        StorageController_kWThreshold = 32,
        StorageController_DispFactor = 33,
        StorageController_ResetLevel = 34,
        StorageController_Seasons = 35,
        StorageController_SeasonTargets = 36,
        StorageController_SeasonTargetsLow = 37,
        StorageController_basefreq = 38,
        StorageController_enabled = 39,
        StorageController_like = 40,
        StorageController_PropertyCount = 40
    };

    enum SwtControlProperty {
        SwtControl_SwitchedObj = 1,
        SwtControl_SwitchedTerm = 2,
        SwtControl_Action = 3,
        SwtControl_Lock = 4,
        SwtControl_Delay = 5,
        SwtControl_Normal = 6,
        SwtControl_State = 7,
        SwtControl_Reset = 8,
        SwtControl_basefreq = 9,
        SwtControl_enabled = 10,
        SwtControl_like = 11,
        SwtControl_PropertyCount = 11
    };

    enum TCCCurveProperty {
        TCCCurve_npts = 1,
        TCCCurve_C_array = 2,
        TCCCurve_T_array = 3,
        TCCCurve_like = 4,
        TCCCurve_PropertyCount = 4
    };

    enum TransformerProperty {
        Transformer_phases = 1,
        Transformer_windings = 2,
        Transformer_wdg = 3,
        Transformer_bus = 4,
        Transformer_conn = 5,
        Transformer_kV = 6,
        Transformer_kVA = 7,
        Transformer_tap = 8,
        Transformer_pctR = 9,
        Transformer_Rneut = 10,
        Transformer_Xneut = 11,
        Transformer_buses = 12,
        Transformer_conns = 13,
        Transformer_kVs = 14,
        Transformer_kVAs = 15,
        Transformer_taps = 16,
        Transformer_XHL = 17,
        Transformer_XHT = 18,
        Transformer_XLT = 19,
        Transformer_Xscarray = 20,
        Transformer_thermal = 21,
        Transformer_n = 22,
        Transformer_m = 23,
        Transformer_flrise = 24,
        Transformer_hsrise = 25,
        Transformer_pctloadloss = 26,
        Transformer_pctnoloadloss = 27,
        Transformer_normhkVA = 28,
        Transformer_emerghkVA = 29,
        Transformer_sub = 30,
        Transformer_MaxTap = 31,
        Transformer_MinTap = 32,
        Transformer_NumTaps = 33,
        Transformer_subname = 34,
        Transformer_pctimag = 35,
        Transformer_ppm_antifloat = 36,
        Transformer_pctRs = 37,
        Transformer_bank = 38,
        Transformer_XfmrCode = 39,
        Transformer_XRConst = 40,
        Transformer_X12 = 41,
        Transformer_X13 = 42,
        Transformer_X23 = 43,
        Transformer_LeadLag = 44,
        Transformer_WdgCurrents = 45,
        Transformer_Core = 46,
        Transformer_RdcOhms = 47,
        Transformer_Seasons = 48,
        Transformer_Ratings = 49,
        Transformer_normamps = 50,
        Transformer_emergamps = 51,
        Transformer_faultrate = 52,
        Transformer_pctperm = 53,
        Transformer_repair = 54,
        Transformer_basefreq = 55,
        Transformer_enabled = 56,
        Transformer_like = 57,
        Transformer_PropertyCount = 57
    };

    enum TSDataProperty {
        TSData_DiaShield = 1,
        TSData_TapeLayer = 2,
        TSData_TapeLap = 3,
        TSData_EpsR = 4,
        TSData_InsLayer = 5,
        TSData_DiaIns = 6,
        TSData_DiaCable = 7,
        TSData_Rdc = 8,
        TSData_Rac = 9,
        TSData_Runits = 10,
        TSData_GMRac = 11,
        TSData_GMRunits = 12,
        TSData_radius = 13,
        TSData_radunits = 14,
        TSData_normamps = 15,
        TSData_emergamps = 16,
        TSData_diam = 17,
        TSData_Seasons = 18,
        TSData_Ratings = 19,
        TSData_Capradius = 20,
        TSData_like = 21,
        TSData_PropertyCount = 21
    };

    enum TShapeProperty {
        TShape_npts = 1,
        TShape_interval = 2,
        TShape_temp = 3,
        TShape_hour = 4,
        TShape_mean = 5,
        TShape_stddev = 6,
        TShape_csvfile = 7,
        TShape_sngfile = 8,
        TShape_dblfile = 9,
        TShape_sinterval = 10,
        TShape_minterval = 11,
        TShape_action = 12,
        TShape_like = 13,
        TShape_PropertyCount = 13
    };

    enum UPFCProperty {
        UPFC_bus1 = 1,
        UPFC_bus2 = 2,
        UPFC_refkv = 3,
        UPFC_pf = 4,
        UPFC_frequency = 5,
        UPFC_phases = 6,
        UPFC_Xs = 7,
        UPFC_Tol1 = 8,
        UPFC_Mode = 9,
        UPFC_VpqMax = 10,
        UPFC_LossCurve = 11,
        UPFC_VHLimit = 12,
        UPFC_VLLimit = 13,
        UPFC_CLimit = 14,
        UPFC_refkv2 = 15,
        UPFC_kvarLimit = 16,
        UPFC_spectrum = 17,
        UPFC_basefreq = 18,
        UPFC_enabled = 19,
        UPFC_like = 20,
        UPFC_PropertyCount = 20
    };

    enum UPFCControlProperty {
        UPFCControl_UPFCList = 1,
        UPFCControl_basefreq = 2,
        UPFCControl_enabled = 3,
        UPFCControl_like = 4,
        UPFCControl_PropertyCount = 4
    };

    enum VCCSProperty {
        VCCS_bus1 = 1,
        VCCS_phases = 2,
        VCCS_prated = 3,
        VCCS_vrated = 4,
        VCCS_ppct = 5,
        VCCS_bp1 = 6,
        VCCS_bp2 = 7,
        VCCS_filter = 8,
        VCCS_fsample = 9,
        VCCS_rmsmode = 10,
        VCCS_imaxpu = 11,
        VCCS_vrmstau = 12,
        VCCS_irmstau = 13,
        VCCS_spectrum = 14,
        VCCS_basefreq = 15,
        VCCS_enabled = 16,
        VCCS_like = 17,
        VCCS_PropertyCount = 17
    };

    enum VSConverterProperty {
        VSConverter_phases = 1,
        VSConverter_Bus1 = 2,
        VSConverter_kVac = 3,
        VSConverter_kVdc = 4,
        VSConverter_kW = 5,
        VSConverter_Ndc = 6,
        VSConverter_Rac = 7,
        VSConverter_Xac = 8,
        VSConverter_m0 = 9,
        VSConverter_d0 = 10,
        VSConverter_Mmin = 11,
        VSConverter_Mmax = 12,
        VSConverter_Iacmax = 13,
        VSConverter_Idcmax = 14,
        VSConverter_Vacref = 15,
        VSConverter_Pacref = 16,
        VSConverter_Qacref = 17,
        VSConverter_Vdcref = 18,
        VSConverter_VscMode = 19,
        VSConverter_spectrum = 20,
        VSConverter_basefreq = 21,
        VSConverter_enabled = 22,
        VSConverter_like = 23,
        VSConverter_PropertyCount = 23
    };

    enum VSourceProperty {
        VSource_bus1 = 1,
        VSource_basekv = 2,
        VSource_pu = 3,
        VSource_angle = 4,
        VSource_frequency = 5,
        VSource_phases = 6,
        VSource_MVAsc3 = 7,
        VSource_MVAsc1 = 8,
        VSource_x1r1 = 9,
        VSource_x0r0 = 10,
        VSource_Isc3 = 11,
        VSource_Isc1 = 12,
        VSource_R1 = 13,
        VSource_X1 = 14,
        VSource_R0 = 15,
        VSource_X0 = 16,
        VSource_ScanType = 17,
        VSource_Sequence = 18,
        VSource_bus2 = 19,
        VSource_Z1 = 20,
        VSource_Z0 = 21,
        VSource_Z2 = 22,
        VSource_puZ1 = 23,
        VSource_puZ0 = 24,
        VSource_puZ2 = 25,
        VSource_baseMVA = 26,
        VSource_Yearly = 27,
        VSource_Daily = 28,
        VSource_Duty = 29,
        VSource_Model = 30,
        VSource_puZideal = 31,
        VSource_spectrum = 32,
        VSource_basefreq = 33,
        VSource_enabled = 34,
        VSource_like = 35,
        VSource_PropertyCount = 35
    };

    enum WireDataProperty {
        WireData_Rdc = 1,
        WireData_Rac = 2,
        WireData_Runits = 3,
        WireData_GMRac = 4,
        WireData_GMRunits = 5,
        WireData_radius = 6,
        WireData_radunits = 7,
        WireData_normamps = 8,
        WireData_emergamps = 9,
        WireData_diam = 10,
        WireData_Seasons = 11,
        WireData_Ratings = 12,
        WireData_Capradius = 13,
        WireData_like = 14,
        WireData_PropertyCount = 14
    };

    enum XfmrCodeProperty {
        XfmrCode_phases = 1,
        XfmrCode_windings = 2,
        XfmrCode_wdg = 3,
        XfmrCode_conn = 4,
        XfmrCode_kV = 5,
        XfmrCode_kVA = 6,
        XfmrCode_tap = 7,
        XfmrCode_pctR = 8,
        XfmrCode_Rneut = 9,
        XfmrCode_Xneut = 10,
        XfmrCode_conns = 11,
        XfmrCode_kVs = 12,
        XfmrCode_kVAs = 13,
        XfmrCode_taps = 14,
        XfmrCode_Xhl = 15,
        XfmrCode_Xht = 16,
        XfmrCode_Xlt = 17,
        XfmrCode_Xscarray = 18,
        XfmrCode_thermal = 19,
        XfmrCode_n = 20,
        XfmrCode_m = 21,
        XfmrCode_flrise = 22,
        XfmrCode_hsrise = 23,
        XfmrCode_pctloadloss = 24,
        XfmrCode_pctnoloadloss = 25,
        XfmrCode_normhkVA = 26,
        XfmrCode_emerghkVA = 27,
        XfmrCode_MaxTap = 28,
        XfmrCode_MinTap = 29,
        XfmrCode_NumTaps = 30,
        XfmrCode_pctimag = 31,
        XfmrCode_ppm_antifloat = 32,
        XfmrCode_pctRs = 33,
        XfmrCode_X12 = 34,
        XfmrCode_X13 = 35,
        XfmrCode_X23 = 36,
        XfmrCode_RdcOhms = 37,
        XfmrCode_Seasons = 38,
        XfmrCode_Ratings = 39,
        XfmrCode_like = 40,
        XfmrCode_PropertyCount = 40
    };

    enum XYCurveProperty {
        XYCurve_npts = 1,
        XYCurve_Points = 2,
        XYCurve_Yarray = 3,
        XYCurve_Xarray = 4,
        XYCurve_csvfile = 5,
        XYCurve_sngfile = 6,
        XYCurve_dblfile = 7,
        XYCurve_x = 8,
        XYCurve_y = 9,
        XYCurve_Xshift = 10,
        XYCurve_Yshift = 11,
        XYCurve_Xscale = 12,
        XYCurve_Yscale = 13,
        XYCurve_like = 14,
        XYCurve_PropertyCount = 14
    };


#ifdef __cplusplus
} // extern "C"
#endif
#endif
